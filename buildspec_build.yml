version: 0.2

env:
  variables:
    AWS_REGION: ap-northeast-1
    AWS_ACCOUNT_ID: 090123123123
    APP_NAME: internal-api
  parameter-store:
    DOCKER_USER: /app/common/docker_hub/user
    DOCKER_TOKEN: /app/common/docker_hub/token

phases:
  install:
    commands:
  pre_build:
    commands:
      - echo Clean file...
      - rm -rf .git .gitignore README.md
      - echo Logging in to Amazon ECR...
      - pip install awscli --upgrade
      - aws --version
      # 変数の設定
      - IMAGE_NAME_NGINX=${APP_NAME}-nginx-${ENVIRONMENT}
      - IMAGE_NAME_PHP_FPM=${APP_NAME}-php-fpm-${ENVIRONMENT}
      - IMAGE_NAME_FLUENTBIT=${APP_NAME}-fluentbit-${ENVIRONMENT}
      - REPOSITORY_URI_NGINX=${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${IMAGE_NAME_NGINX}
      - REPOSITORY_URI_PHP_FPM=${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${IMAGE_NAME_PHP_FPM}
      - REPOSITORY_URI_FLUENTBIT=${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${IMAGE_NAME_FLUENTBIT}
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
      # ECRログイン
      - aws ecr get-login-password --region ${AWS_REGION} | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com
      # docker hubログイン コンテナimage pull時のrate limit対策
      - echo $DOCKER_TOKEN | docker login -u $DOCKER_USER --password-stdin
  build:
    commands:
      - echo Writing image definitions file...
      - echo ${ENVIRONMENT}
      # テンプレートからtask definitionを生成
      - cat ./ecs/environments/${ENVIRONMENT}/task_definition_template.json | sed -e s@\<REPOSITORY_URI_NGINX\>@$REPOSITORY_URI_NGINX:$IMAGE_TAG@ -e s@\<REPOSITORY_URI_FLUENTBIT\>@$REPOSITORY_URI_FLUENTBIT:$IMAGE_TAG@ -e s@\<REPOSITORY_URI_PHP_FPM\>@$REPOSITORY_URI_PHP_FPM:$IMAGE_TAG@ -e s@SED_TARGET_AWS_ACCOUNT_ID@$AWS_ACCOUNT_ID@g -e s@SED_TARGET_ENVIRONMENT@$ENVIRONMENT@g -e s@SED_TARGET_AWS_REGION@$AWS_REGION@g -e s@SED_TARGET_APP_NAME@$APP_NAME@g -e s@SED_TARGET_EGRESS_IGNORED_PORT_RDS_MYSQL@$EGRESS_IGNORED_PORT_RDS_MYSQL@g -e s@SED_TARGET_EGRESS_IGNORED_PORT_ELASTICACHE_REDIS@$EGRESS_IGNORED_PORT_ELASTICACHE_REDIS@g > ./ecs/environments/${ENVIRONMENT}/task_definition.json
      # fluentbit設定ファイル生成
      - cat ./ecs/environments/${ENVIRONMENT}/docker/fluentbit/etc/extra_template.conf | sed -e s@SED_TARGET_ENVIRONMENT@$ENVIRONMENT@g -e s@SED_TARGET_AWS_REGION@$AWS_REGION@g -e s@SED_TARGET_APP_NAME@$APP_NAME@g > ./ecs/environments/${ENVIRONMENT}/docker/fluentbit/etc/extra.conf
      # デバッグ
      - cat ./ecs/environments/${ENVIRONMENT}/task_definition.json
      - cat ./ecs/environments/${ENVIRONMENT}/docker/fluentbit/etc/extra.conf
      # docker imageのビルド
      - echo ${REPOSITORY_URI_FLUENTBIT}
      - echo ${ENVIRONMENT}
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t ${REPOSITORY_URI_NGINX}:latest --build-arg ENVIRONMENT=${ENVIRONMENT} -f ./ecs/environments/${ENVIRONMENT}/docker/nginx/Dockerfile .
      - docker build -t ${REPOSITORY_URI_PHP_FPM}:latest --build-arg ENVIRONMENT=${ENVIRONMENT} -f ./ecs/environments/${ENVIRONMENT}/docker/php-fpm/Dockerfile .
      - docker build -t ${REPOSITORY_URI_FLUENTBIT}:latest --build-arg ENVIRONMENT=${ENVIRONMENT} -f ./ecs/environments/${ENVIRONMENT}/docker/fluentbit/Dockerfile .
      # docker imageのタグ付け
      - docker tag ${REPOSITORY_URI_NGINX}:latest ${REPOSITORY_URI_NGINX}:$IMAGE_TAG
      - docker tag ${REPOSITORY_URI_PHP_FPM}:latest ${REPOSITORY_URI_PHP_FPM}:$IMAGE_TAG
      - docker tag ${REPOSITORY_URI_FLUENTBIT}:latest ${REPOSITORY_URI_FLUENTBIT}:$IMAGE_TAG
  post_build:
    commands:
      # ECRへのプッシュ
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      # latest運用はしない
      - docker push ${REPOSITORY_URI_NGINX}:$IMAGE_TAG
      - docker push ${REPOSITORY_URI_PHP_FPM}:$IMAGE_TAG
      - docker push ${REPOSITORY_URI_FLUENTBIT}:$IMAGE_TAG
artifacts:
  files:
    - ./ecs/environments/${ENVIRONMENT}/appspec.yaml
    - ./ecs/environments/${ENVIRONMENT}/task_definition.json
    - ./ecs/environments/${ENVIRONMENT}/docker/fluentbit/etc/extra.conf
  discard-paths: yes # 中間のパスを無視してartifacts.zipのみ出力できる
